$background-color: #111;
$background-highlight-color: #1a1a1a;
$background-inset-color: #000;
$block-color: #282828;
$block-inset-color: $background-color;
$block-highlight-color: #444;
$text-color: #eee;
$text-deemphasized-color: #555;
$text-deemphasized-color-2: #8e8e8e;

$block-width: 200px;
$block-height: 33px;
$block-padding: 6px;

$box-shadow: 0 2px 10px 0 rgba(0, 0, 0, 0.4);

* {
  box-sizing: border-box;
}

body {
  margin: 0;
  background: $background-color;
  color: $text-color;
  font-family: Consolas, monospace;
  font-size: 12px;
  overflow: hidden;
}

span {
  font-family: sans-serif;
  user-select: none;
}

label {
  display: flex;
  align-items: center;
}

.Label {
  margin-left: 4px;
}

.LabelText {
  color: $text-deemphasized-color-2;
  margin-right: 4px;
}

input {
  width: 100%;
  background: $background-inset-color;
  color: inherit;
  border: none;
  border-radius: 2px;
  outline: none;
  padding: 3px 6px;
  font-family: inherit;
  font-size: inherit;

  .Block & {
    background: $block-inset-color;
  }
}

.Expression {
  @extend input;
  flex-grow: 1;

  input {
    padding: 0;
  }
}

.electron-app-title-bar {
  background: $block-color !important;
  border-bottom: none !important;

  &.non-windows {
    height: 38px;
    -webkit-app-region: drag;
  }
}

.RunButton {
  color: white;
  display: flex;
  align-items: center;
  padding: 0 10px;
  -webkit-app-region: no-drag;

  &:hover {
    background: $block-highlight-color;
  }

  .electron-app-title-bar.non-windows & {
    position: absolute;
    left: 79px;
    height: inherit;
  }
}

.Content {
  height: 100vh;
  display: grid;
  grid-template-columns: auto max-content;
  overflow: auto;
}

.EditableArea {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  align-content: flex-start;
  overflow: hidden;
}

.FunctionWrapper {
  width: fit-content;
}

.Function {
  display: flex;
  flex-direction: column;
  width: fit-content;
  height: fit-content;
  margin: 20px;
}

.FunctionHeader {
  @extend .BlockWrapper;
  @extend .Block;
  display: flex;
  align-items: center;
  padding: $block-padding;
  text-align: center;
  background: $background-highlight-color;
  border-radius: 4px;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

.AddParamButton {
  line-height: 0;
  color: $text-deemphasized-color;

  &:hover {
    color: $text-color;
  }

  .Function:not(:hover) & {
    visibility: hidden;
  }
}

.Blocks {
  height: 100%;
}

.BlockWrapper {
  &:not(:last-of-type) {
    border-bottom: 1px solid $block-inset-color;
  }
}

.Block {
  width: $block-width;
  height: $block-height;
  display: flex;
  background: $block-color;
  padding: $block-padding;
  box-shadow: $box-shadow;
}

.MenuOverlay {
  position: absolute;
  visibility: hidden;

  .AutocompleteInput:focus-within & {
    visibility: visible;
  }
}

.Menu {
  background: $block-color;
  overflow: hidden;
  box-shadow: $box-shadow;
}

.MenuItem {
  padding: 7px 12px;
  display: block;
  color: $text-deemphasized-color-2;
  text-decoration: inherit;
  outline: none;

  &:hover,
  &:focus {
    color: inherit;
    background: $block-highlight-color;
  }
}

.AddBlockButton {
  @extend .Block;
  line-height: 0;
  color: $text-deemphasized-color;

  &:hover {
    color: $text-color;
    position: relative;
  }

  &:not(:hover) {
    background: $background-highlight-color;
    box-shadow: none;
  }
}

.Call,
.VarDecl,
.Compare,
.If {
  display: flex;
  align-items: center;
}

.FunctionHeader > * + *,
.Call > * + *,
.VarDecl > * + *,
.If > * + * {
  margin-left: 8px;
}

.Call,
.VarDecl {
  & > .Expression {
    width: 100%;
  }
}

.Then,
.Else {
  padding-left: 10px;
  background: $block-color;
}

.CompoundBlockLabel {
  width: 200px;
  height: 18px;
  background: $block-color;
  margin: 0;
  padding-left: 10px;
  display: flex;
  align-items: center;
}

.RenderView {
  position: relative;
}
